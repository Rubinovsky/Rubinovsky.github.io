{"version":3,"sources":["elements/TimeItem.js","TimeCalculator.js","utils/arraySum.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","_templateObject","Id","span","_templateObject2","Time","_templateObject3","TimeItem","_ref","id","time","hours","onClick","Math","floor","minites","react_default","a","createElement","customStyles","content","backgroundColor","top","left","right","bottom","marginRight","transform","Modal","setAppElement","TimeCalculator_templateObject","Header","TimeCalculator_templateObject2","Button","TimeCalculator_templateObject3","ItemWrap","_templateObject4","Content","_templateObject5","InputWrap","_templateObject6","Input","props","css","_templateObject7","type","TimeCalculator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hoursRate","localStorage","getItem","spentTime","timeItems","split","state","modalIsOpen","minutes","inputRef","React","createRef","openModal","bind","assertThisInitialized","closeModal","handleChangeHours","handleChangeMinutes","onKeyPressed","saveToLocal","removeLocalData","handleChangeHoursRate","setState","_this$state","setItem","removeItem","e","_this$state2","keyCode","timeItem","push","forEach","item","current","focus","target","value","_this$state3","spentHours","spentMinutes","haveTask","length","money","console","log","allHours","arr","sum","arraySum","TimeCalculator_Wrapper","onKeyDown","index_es","icon","faPlusCircle","style","marginLeft","faSave","faTrashAlt","faDollarSign","maxWidth","onChange","placeholder","faClock","map","index","elements_TimeItem","key","toString","lib_default","isOpen","onRequestClose","contentLabel","autoFocus","ref","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_TimeCalculator","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5093c2ca.chunk.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 50px;\n  align-items: center;\n  justify-content: flex-start;\n  color: #ffffff;\n  border-bottom: 1px solid #ffffff;\n`;\nconst Id = styled.span`\n  min-width: 30px;\n  max-width: 30px;\n  min-height: 30px;\n  max-height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  border: 2px solid #ffffff;\n  border-radius: 50%;\n  margin-right: 10px;\n`;\nconst Time = styled.div`\n  font-size: 20px;\n`;\nconst TimeItem = ({ id, time, onClick }) => {\n  const hours = Math.floor(time / 60);\n  const minites = Math.floor(time % 60);\n  return(\n    <Wrapper>\n      <Id>{id}</Id>\n      <Time>{hours !== 0 ? hours + ' h' : null} {minites !== 0 ? minites + ' m' : null}</Time>\n    </Wrapper>\n  )\n};\n\nexport default TimeItem;\n","import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faTrashAlt, faClock, faSave, faDollarSign } from '@fortawesome/free-solid-svg-icons'\nimport TimeItem from './elements/TimeItem';\nimport { arraySum } from './utils/arraySum';\nimport Modal from \"react-modal\";\n\nconst customStyles = {\n  content : {\n    backgroundColor       : '#001f3f',\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nModal.setAppElement('#root');\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  padding: 20px;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Lato', sans-serif;\n`;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Button = styled.div`\n  color: #ffffff;\n  text-transform: uppercase;\n  box-sizing: border-box;\n  cursor: pointer;\n  opacity: 0.8;\n  transition: 0.5s;\n  &:hover{\n    opacity: 1;\n  }\n  svg {\n    width: 30px!important;\n    height: 30px!important;\n  }\n`;\nconst ItemWrap = styled.div`\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  svg{\n    margin-right: 20px;\n    width: 30px!important;\n    height: 30px!important;\n  }\n`;\n\nconst Content = styled.div`\n  display: block;\n  width: 100%;\n  max-height: calc(100vh -100px);\n  overflow-y: auto;\n  border: 1px solid #ffffff;\n  padding: 0 20px;\n  box-sizing: border-box;\n  margin-top: 30px;\n  &>div{\n    &:last-child{\n      border-bottom: 0;\n    }\n  }\n`;\nconst InputWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst Input = styled.div(props => {\n  return css`\n    width: calc(50% - 10px);\n    position: relative;\n    &:after{\n      content: '${props.type}';\n      position: absolute;\n      width: 40px;\n      right: 1px;\n      top: 1px;\n      bottom: 1px;\n      background-color: #001f3f;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-family: 'Lato', sans-serif;\n      color: #ffffff;\n    }\n    input{\n      box-sizing: border-box;\n      border: 1px solid transparent;\n      border-bottom-color: #ffffff;\n      background-color: transparent;\n      font-size: 20px;\n      padding: 5px 25px 5px 10px;\n      width: 100%;\n      color: #ffffff;\n      &:focus{\n        outline: none;\n        border-color: #ffffff;\n      }\n    }\n  `;\n});\n\nclass TimeCalculator extends Component {\n  constructor(props){\n    super(props);\n    let hoursRate = localStorage.getItem('hoursRate');\n    let spentTime = localStorage.getItem('spentTime');\n    hoursRate = hoursRate ? hoursRate : false;\n    spentTime = spentTime ? spentTime : false;\n    let timeItems = localStorage.getItem('timeCalculator');\n    if(timeItems){\n      timeItems = timeItems.split(',');\n    }\n    else{\n      timeItems = [];\n    }\n\n    this.state = {\n      timeItems,\n      hoursRate,\n      spentTime,\n      modalIsOpen: false,\n      hours: null,\n      minutes: null,\n      inputRef: React.createRef()\n\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleChangeHours = this.handleChangeHours.bind(this);\n    this.handleChangeMinutes = this.handleChangeMinutes.bind(this);\n    this.onKeyPressed = this.onKeyPressed.bind(this);\n    this.saveToLocal = this.saveToLocal.bind(this);\n    this.removeLocalData = this.removeLocalData.bind(this);\n    this.handleChangeHoursRate = this.handleChangeHoursRate.bind(this);\n  }\n  openModal() {\n    this.setState({modalIsOpen: true});\n  }\n  saveToLocal() {\n    const { timeItems, hoursRate, spentTime } = this.state;\n    localStorage.setItem('timeCalculator', timeItems);\n    localStorage.setItem('hoursRate', hoursRate);\n    localStorage.setItem('spentTime', spentTime);\n  }\n  removeLocalData() {\n    localStorage.removeItem('timeCalculator');\n    localStorage.removeItem('hoursRate');\n    localStorage.removeItem('spentTime');\n    this.setState({\n      timeItems: [],\n      hoursRate: false\n    })\n  }\n  closeModal() {\n    this.setState({modalIsOpen: false});\n  }\n  onKeyPressed(e){\n    const { modalIsOpen, hours, minutes, inputRef } = this.state;\n    const { keyCode } = e;\n    if(keyCode === 13){\n      if (modalIsOpen){\n        let { timeItems } = this.state;\n        let spentTime = 0;\n        const timeItem = (+hours * 60) + (+minutes);\n        if (timeItem !== 0){\n          timeItems.push(timeItem);\n          timeItems.forEach( item => {\n            spentTime += item;\n          });\n          this.setState({\n            timeItems,\n            spentTime,\n          });\n          localStorage.setItem('spentTime', spentTime);\n        }\n        this.setState({\n          hours: null,\n          minutes: null\n        });\n        inputRef.current.focus();\n      }\n    }\n\n  }\n  handleChangeHours(e){\n    this.setState({\n      hours: e.target.value\n    });\n  }\n  handleChangeMinutes(e){\n    this.setState({\n      minutes: e.target.value\n    });\n  }\n  handleChangeHoursRate(e){\n    this.setState({\n      hoursRate: e.target.value\n    });\n  }\n  render() {\n    const { spentTime, timeItems, hours, minutes, hoursRate } = this.state;\n    const spentHours = Math.floor(spentTime / 60);\n    const spentMinutes = Math.floor(spentTime % 60);\n    const haveTask = !!timeItems.length;\n    let money = 0;\n    console.log(spentTime);\n    if(hoursRate !== 0 && haveTask){\n      let allHours = arraySum(timeItems) / 60;\n      money = Math.floor(allHours * hoursRate);\n    }\n    return (\n      <Wrapper onKeyDown={this.onKeyPressed}>\n        {haveTask && (\n          <Header>\n            <Button onClick={this.openModal}><FontAwesomeIcon icon={ faPlusCircle } /></Button>\n            <Button onClick={this.saveToLocal} style={{marginLeft: '20px'}}><FontAwesomeIcon icon={ faSave } /></Button>\n            <Button onClick={this.removeLocalData} style={{marginLeft: '20px', marginRight: 'auto'}}><FontAwesomeIcon icon={ faTrashAlt } /></Button>\n            {(money !== 0) && (\n              <ItemWrap>\n                <FontAwesomeIcon icon={ faDollarSign} />\n                {money + ' $'}\n              </ItemWrap>\n            )}\n            <Input type=\"H / $\" style={{maxWidth: '200px'}}>\n              <input onChange={this.handleChangeHoursRate} type=\"number\" placeholder=\"Hours Rate\" value={hoursRate} />\n            </Input>\n            <ItemWrap>\n              <FontAwesomeIcon icon={ faClock} />\n              {spentHours !== 0 ? spentHours + ' h' : ''} {spentMinutes !== 0 ? spentMinutes + ' m' : ''}\n            </ItemWrap>\n          </Header>\n        )}\n        {!haveTask && (\n          <Header>\n            <Button onClick={this.openModal}><FontAwesomeIcon icon={ faPlusCircle } /></Button>\n          </Header>\n        )}\n\n        {haveTask && (\n          <Content>\n            {timeItems.map( (time, index) => (\n              <TimeItem time={time} id={index + 1} key={time.toString() + '_' + index.toString()} />\n            ))}\n          </Content>\n        )}\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Set Time\"\n        >\n          <InputWrap>\n            <Input type=\"h\">\n              <input autoFocus ref={this.state.inputRef} onChange={this.handleChangeHours} type=\"number\" placeholder=\"Hours\" value={hours ? hours : ''} />\n            </Input>\n            <Input type=\"m\">\n              <input onChange={this.handleChangeMinutes} type=\"number\" placeholder=\"Minutes\"  value={minutes ? minutes : ''}/>\n            </Input>\n          </InputWrap>\n        </Modal>\n      </Wrapper>\n    );\n  }\n}\n\nexport default TimeCalculator;\n","export const arraySum = arr => {\n  let sum = 0;\n  arr.forEach( item => {\n    sum += +item;\n  });\n  return sum;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TimeCalculator from './TimeCalculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<TimeCalculator />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}